#

pluginName = org.palladiosimulator.supporting.prolog.model Edit Support
providerName = www.example.org

_UI_CreateChild_text = {0}
_UI_CreateChild_text2 = {1} {0}
_UI_CreateChild_text3 = {1}
_UI_CreateChild_tooltip = Create New {0} Under {1} Feature
_UI_CreateChild_description = Create a new child of type {0} for the {1} feature of the selected {2}.
_UI_CreateSibling_description = Create a new sibling of type {0} for the selected {2}, under the {1} feature of their parent.

_UI_PropertyDescriptor_description = The {0} of the {1}

_UI_Program_type = Program
_UI_Clause_type = Clause
_UI_Fact_type = Fact
_UI_Rule_type = Rule
_UI_CallTerm_type = Call Term
_UI_Atom_type = Atom
_UI_Term_type = Term
_UI_Expression_type = Expression
_UI_Group_type = Group
_UI_And_type = And
_UI_Or_type = Or
_UI_Not_type = Not
_UI_NaryOperator_type = Nary Operator
_UI_BinaryOperator_type = Binary Operator
_UI_ComparisonOperator_type = Comparison Operator
_UI_UnaryOperator_type = Unary Operator
_UI_ArithmeticOperator_type = Arithmetic Operator
_UI_Cut_type = Cut
_UI_Unknown_type = Object

_UI_Unknown_datatype= Value

_UI_Program_clauses_feature = Clauses
_UI_Clause_head_feature = Head
_UI_Rule_body_feature = Body
_UI_Atom_name_feature = Name
_UI_Term_functor_feature = Functor
_UI_Term_arguments_feature = Arguments
_UI_Term_arity_feature = Arity
_UI_NaryOperator_operands_feature = Operands
_UI_BinaryOperator_operands_feature = Operands
_UI_ComparisonOperator_operation_feature = Operation
_UI_UnaryOperator_operand_feature = Operand
_UI_ArithmeticOperator_operation_feature = Operation
_UI_Unknown_feature = Unspecified

_UI_ComparisonOperation_EQUALS_literal = EQUALS
_UI_ComparisonOperation_GREATER_literal = GREATER
_UI_ComparisonOperation_GREATER_EQUALS_literal = GREATER_EQUALS
_UI_ComparisonOperation_LESS_literal = LESS
_UI_ComparisonOperation_LESS_EQUALS_literal = LESS_EQUALS
_UI_ComparisonOperation_NOT_EQUALS_literal = NOT_EQUALS
_UI_ArithmeticOperation_ADD_literal = ADD
_UI_ArithmeticOperation_SUBTRACT_literal = SUBTRACT
_UI_ArithmeticOperation_MULTIPLY_literal = MULTIPLY
_UI_ArithmeticOperation_DIVIDE_literal = DIVIDE
_UI_CompoundTerm_type = Compound Term
_UI_AtomicNumber_type = Atomic Number
_UI_AtomicQuotedString_type = Atomic Quoted String
_UI_List_type = List
_UI_Directive_type = Directive
_UI_PredicateIndicator_type = Predicate Indicator
_UI_Dynamic_type = Dynamic
_UI_Discontiguous_type = Discontiguous
_UI_Multifile_type = Multifile
_UI_Public_type = Public
_UI_Volatile_type = Volatile
_UI_UnaryExpression_type = Unary Expression
_UI_BinaryExpression_type = Binary Expression
_UI_LogicalOr_type = Logical Or
_UI_Condition_type = Condition
_UI_SoftCut_type = Soft Cut
_UI_LogicalAnd_type = Logical And
_UI_NotProvable_type = Not Provable
_UI_LessThan_type = Less Than
_UI_Unification_type = Unification
_UI_Univ_type = Univ
_UI_StructuralEquivalence_type = Structural Equivalence
_UI_StructuralEquivalenceNotProvable_type = Structural Equivalence Not Provable
_UI_NumberEqual_type = Number Equal
_UI_LessOrEqual_type = Less Or Equal
_UI_Equivalence_type = Equivalence
_UI_NonEqualNumber_type = Non Equal Number
_UI_GreaterThan_type = Greater Than
_UI_GreaterOrEqual_type = Greater Or Equal
_UI_StandardOrderBefore_type = Standard Order Before
_UI_EqualOrStandardOrderBefore_type = Equal Or Standard Order Before
_UI_StandardOrderAfter_type = Standard Order After
_UI_EqualOrStandardOrderAfter_type = Equal Or Standard Order After
_UI_NotUnifiable_type = Not Unifiable
_UI_Disequality_type = Disequality
_UI_As_type = As
_UI_Is_type = Is
_UI_ParticalUnification_type = Partical Unification
_UI_SubDict_type = Sub Dict
_UI_ModuleCall_type = Module Call
_UI_Plus_type = Plus
_UI_Minus_type = Minus
_UI_BinaryAnd_type = Binary And
_UI_BinaryOr_type = Binary Or
_UI_Xor_type = Xor
_UI_Multiplication_type = Multiplication
_UI_Division_type = Division
_UI_IntegerDivision_type = Integer Division
_UI_Div_type = Div
_UI_Rdiv_type = Rdiv
_UI_BitwiseShiftLeft_type = Bitwise Shift Left
_UI_Mod_type = Mod
_UI_Rem_type = Rem
_UI_Power_type = Power
_UI_PositiveNumber_type = Positive Number
_UI_NegativeNumber_type = Negative Number
_UI_BitwiseNegation_type = Bitwise Negation
_UI_CompoundTerm_value_feature = Value
_UI_CompoundTerm_arguments_feature = Arguments
_UI_AtomicNumber_value_feature = Value
_UI_AtomicQuotedString_value_feature = Value
_UI_List_heads_feature = Heads
_UI_List_tails_feature = Tails
_UI_Fact_head_feature = Head
_UI_Rule_head_feature = Head
_UI_Directive_name_feature = Name
_UI_Directive_predicates_feature = Predicates
_UI_PredicateIndicator_name_feature = Name
_UI_PredicateIndicator_arity_feature = Arity
_UI_UnaryExpression_expr_feature = Expr
_UI_BinaryExpression_left_feature = Left
_UI_BinaryExpression_right_feature = Right
_UI_Constant_type = Constant
_UI_True_type = True
_UI_False_type = False
_UI_Fail_type = Fail
_UI_ControlPredicate_type = Control Predicate
_UI_Comment_type = Comment
_UI_Comment_value_feature = Value
_UI_Table_type = Table
_UI_Table_predicate_feature = Predicate
